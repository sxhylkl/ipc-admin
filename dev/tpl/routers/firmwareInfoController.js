/** * Created by zzq on 2017/5/3. */define(function (require) {    //加载所需模块    var app = require('app');    require('myService');    var loadCss = require('loadCss');    loadCss.loadCss('res/css/firmwareInfo.css');    //控制器    app.controller('firmwareInfoController', function ($scope, myService) {        function init() {            //初始化设置表单为disabled            $scope.inputCan = true;            //固件版本选择应该使用select            //初始化当前固件版本信息            myService.getJson('/kinzo-cms/current-firmwareInfo')                .success(function (data) {                    $scope.backupFirmwareInfo = JSON.parse(JSON.stringify(data));//深拷贝备份数据                    $scope.firmwareInfo = data;                });            //初始化保存的固件版本信息            myService.getJson('kinzo-cms/current-firmwareInfo/back')                .success(function (data) {                    $scope.newFirmwareInfo = data;//获取保存的信息设置为新版本信息                });            //初始化历史版本信息            // myService.getJson('kinzo-cms/history-firmwareList')            //     .success(function (data) {            //         $scope.historyFirmList = data.firmwareList;            //     });            //初始化历史版本            $scope.pageInfo = {                startPage: 1,//索要的页码                pageSize: 2,//每页条数            }            //请求某页数据的函数            var gethistoryFirmList = function (url, requestDate) {                myService.getJson(url, requestDate)                    .success(function (data) {                        $scope.historyFirmList = data.firmwareList;//获取类型列表数据                        $scope.totalCount = data.totalCount;//获取总条数                        $scope.maxSize = 5;//设置显示的页码数量                        $scope.startPage = $scope.pageInfo.startPage                    })            };            gethistoryFirmList('kinzo-cms/history-firmwareList', $scope.pageInfo);        };        init();        //激活表单修改        $scope.changeCurrentFirmwareInfo = function () {            $scope.inputCan = false;        };        //修改有误在提交前重置        $scope.resetCurrentFirmwareInfo = function () {            console.log($scope.backupFirmwareInfo);            $scope.firmwareInfo = $scope.backupFirmwareInfo;            $scope.inputCan = true;        };        //提交并重新初始化        $scope.updateCurrentFirmwareInfo = function () {            myService.getJson('kinzo-cms/current-firmwareInfo', $scope.firmwareInfo, 'POST')                .success(function () {                    $scope.inputCan = true;                    layer.msg('修改成功', {icon: 1, time: 1500});                    init();                });        };        //上传新版本        $scope.upDate = function () {            console.log($scope.newFirmwareInfo);            myService.getJson('kinzo-cms/current-firmwareInfo/update', $scope.newFirmwareInfo, 'POST')                .success(function () {                    layer.msg('更新成功', {icon: 1, time: 1500});                });            /****  这里有个问题，提交新版本之后清空保存的版本这个操作是前端发起来清空还是后台接收到新版本就主动清空暂存的版本  ******/            //上传完成之后更新保存的信息为空并重新加载当前版本            $scope.newFirmwareInfo = {};            myService.getJson('kinzo-cms/current-firmwareInfo/saveDate', $scope.newFirmwareInfo, 'POST');            init();        };        //上传保存信息        $scope.saveDate = function () {            console.log($scope.newFirmwareInfo);            myService.getJson('kinzo-cms/current-firmwareInfo/saveDate', $scope.newFirmwareInfo, 'POST')                .success(function () {                    layer.msg('保存完成', {icon: 1, time: 1500});                })        };        //点击翻页、上面的初始化需要换个方式重写一下        // $scope.pageChange =    })})